import React, { useMemo, useState } from 'react'

const tabs = [
  { key: 'input', label: 'Input' },
  { key: 'research', label: 'Research' },
  { key: 'generate', label: 'Generate' },
  { key: 'output', label: 'Output' },
]

export default function App() {
  const [active, setActive] = useState('input')
  const [sources, setSources] = useState({ url: '', raw: '' })
  const [contentType, setContentType] = useState('banhang')
  const [outline, setOutline] = useState('')
  const [result, setResult] = useState('')

  const generated = useMemo(() => {
    if (!outline) return ''
    return [
      'üéØ D·∫°ng b√†i: ' + mapType(contentType),
      '',
      '#TravelWithABTRIP',
      '',
      '---',
      outline
        .split('\n')
        .map((l, i) => (l.trim() ? (i + 1) + '. ' + l.trim() : ''))
        .join('\n'),
    ].join('\n')
  }, [outline, contentType])

  return (
    <div className="container">
      <header className="topbar">
        <h1>ABTRIP Marketing Tool üöÄ</h1>
        <p className="sub">Gen Z mode: on. ƒê·∫©y content l√™n net l·∫π üí®</p>
      </header>

      <nav className="tabs">
        {tabs.map(t => (
          <button
            key={t.key}
            className={'tab ' + (active === t.key ? 'active' : '')}
            onClick={() => setActive(t.key)}
          >
            {t.label}
          </button>
        ))}
      </nav>

      <main className="panel">
        {active === 'input' && (
          <section className="card">
            <h2>Input ngu·ªìn</h2>
            <label>Link ngu·ªìn (YouTube/TikTok/Facebook‚Ä¶)</label>
            <input
              placeholder="https://‚Ä¶"
              value={sources.url}
              onChange={e => setSources(s => ({ ...s, url: e.target.value }))}
            />
            <label>Ho·∫∑c d√°n n·ªôi dung g·ªëc</label>
            <textarea
              rows={8}
              placeholder="D√°n transcript/b√†i vi·∫øt t·∫°i ƒë√¢y‚Ä¶"
              value={sources.raw}
              onChange={e => setSources(s => ({ ...s, raw: e.target.value }))}
            />
            <div className="grid2">
              <div>
                <label>Lo·∫°i content</label>
                <select value={contentType} onChange={e => setContentType(e.target.value)}>
                  <option value="banhang">B√†i b√°n h√†ng</option>
                  <option value="story">K·ªÉ chuy·ªán</option>
                  <option value="share">Chia s·∫ª ki·∫øn th·ª©c</option>
                  <option value="viral">B·∫Øt trend/viral</option>
                  <option value="faq">H·ªèi - ƒë√°p (FAQ)</option>
                </select>
              </div>
              <div>
                <label>Action</label>
                <button
                  className="btn"
                  onClick={() => alert('Demo: parse ngu·ªìn/ tr√≠ch keywords/ summary.\n(T√≠ch h·ª£p AI sau)')}
                >
                  Ph√¢n t√≠ch ngu·ªìn (demo)
                </button>
              </div>
            </div>
          </section>
        )}

        {active === 'research' && (
          <section className="card">
            <h2>Research & Outline</h2>
            <p className="hint">Vi·∫øt d√†n √Ω bullet (m·ªói d√≤ng 1 √Ω). Tool s·∫Ω bi·∫øn th√†nh b√†i vi·∫øt ·ªü tab Generate.</p>
            <textarea
              rows={12}
              placeholder={`V√≠ d·ª•:
Hook: Bay Trung - Thu v√†ng l·ªông l·∫´y
Pain: sƒÉn v√© m·ªát ‚Äî gi√° nh·∫£y
Value: gi√° t·ªët, t∆∞ v·∫•n tuy·∫øn t·ªëi ∆∞u
CTA: inbox ABTRIP‚Ä¶`}
              value={outline}
              onChange={e => setOutline(e.target.value)}
            />
            <div className="row">
              <button className="btn" onClick={() => setOutline(prev => prev || 'Hook...\nPain...\nValue...\nCTA...')}>
                G·ª£i √Ω d√†n √Ω nhanh
              </button>
            </div>
          </section>
        )}

        {active === 'generate' && (
          <section className="card">
            <h2>Generate</h2>
            <p className="hint">N·ªôi dung t·∫°o t·ª´ d√†n √Ω + g·∫Øn hashtag #TravelWithABTRIP</p>
            <textarea rows={14} readOnly value={generated} />
            <div className="row">
              <button className="btn" onClick={() => { setResult(generated); setActive('output') }}>
                ƒê∆∞a sang Output
              </button>
            </div>
          </section>
        )}

        {active === 'output' && (
          <section className="card">
            <h2>Output</h2>
            <textarea
              rows={14}
              value={result}
              onChange={e => setResult(e.target.value)}
            />
            <div className="row wrap">
              <button className="btn" onClick={() => navigator.clipboard.writeText(result)}>
                Copy
              </button>
              <button className="btn" onClick={() => downloadText('abtrip-post.txt', result || generated)}>
                T·∫£i .txt
              </button>
              <button className="btn ghost" onClick={() => alert('Demo publish. K·∫øt n·ªëi WordPress/Facebook/Zalo OA sau.')}>
                Publish (demo)
              </button>
            </div>
          </section>
        )}
      </main>

      <footer className="foot">¬© ABTRIP ‚Ä¢ #TravelWithABTRIP</footer>
    </div>
  )
}

function mapType(v) {
  return {
    banhang: 'B√†i b√°n h√†ng',
    story: 'K·ªÉ chuy·ªán',
    share: 'Chia s·∫ª ki·∫øn th·ª©c',
    viral: 'B·∫Øt trend/viral',
    faq: 'H·ªèi - ƒë√°p (FAQ)',
  }[v] || v
}

function downloadText(filename, text) {
  const blob = new Blob([text], { type: 'text/plain;charset=utf-8' })
  const link = document.createElement('a')
  link.href = URL.createObjectURL(blob)
  link.download = filename
  link.click()
  URL.revokeObjectURL(link.href)
}
